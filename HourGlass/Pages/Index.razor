<!-- Index.razor -->
@page "/"
@using ApplicationCore.Models
@using ApplicationCore.Interfaces
@using Microsoft.AspNetCore.Components
@inject IJSRuntime JsRuntime


<PageTitle>Index</PageTitle>


<div class="container">

    <div class="row">
        <div class="col-12 col-md-6 justify-content-start">
            <a class="hg-back-btn btn mb-4" role="button" @onclick="() => OpenCreateTemplate()">Create New <i class="bi bi-plus-circle"></i></a>
        </div>
    </div>




    <div id="templates" class="row row-cols-2 row-cols-md-3 row-cols-lg-4 g-4 justify-content-center">
        @foreach (var template in TemplateList)
        {
            var textColor = IsDarkColor(template.TemplateColor) ? "text-white" : "text-black";
            var iconColor = IsDarkColor(template.TemplateColor) ? "text-white" : "text-black";
            var gradientStartColor = template.TemplateColor; // Starting color for gradient
            var gradientEndColor = GetTransitionColor(gradientStartColor, IsDarkColor(gradientStartColor)); // Get ending color for gradient

            <div class="col">
                <div class="card animated position-relative h-100 robot-card"
                     style="background: linear-gradient(to bottom, @gradientStartColor, @gradientEndColor)"
                @onclick="() => OpenTemplateSession(template.Id)">
                    <div class="text-center card-body px-4 pt-4 robot-card-body">
                        <i class="fas @template.TemplateImage hourglass-icon @iconColor"></i>
                        <h5 class="hourglass-template-card-title card-title d-none d-sm-block @textColor">@template.Name</h5>
                    </div>
                    <div class="position-absolute top-0 end-0 mt-3 me-3">
                        <button class="btn btn-link btn-sm" @onclick:stopPropagation="true"
                        @onclick="() => EditTemplate(template.Id)">
                            <i class="fas fa-cog @iconColor"></i>
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
    
</div>


<div class="col-xl-12 my-4">
    <h2 class="text-center" id="statsTitle">Weekly Dashboard</h2>
</div>
<div class="container d-flex justify-content-center">
    <div class="dash-card pb-2 my-2">
        <div class="row justify-content-center align-items-center text-center" id="statsRow">
            <div class="col-xl-5 m-1">
                <!-- Content for bar chart -->
                <div id="bar-chart-container">
                    <!-- Bar Chart Content -->
                </div>
            </div>
            <div class="col-xl-5 m-1">
                <!-- Content for pie chart -->
                <div id="pie-chart-container">
                    <!-- Pie Chart Content -->
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container d-flex justify-content-center">
    <div class="dash-card my-3 pe-5 pb-3"> <!-- Adjusted padding classes -->
        <div id="weekly-stats">
            <!-- Content for weekly stats -->
        </div>
    </div>
</div>




 @code {
        private bool hasRendered = false;

        private void PassDataToJavaScript()
        {
            var templateDurations = SessionList
            .GroupBy(session => session.Template.Id)
            .Select(group => new
            {
                TemplateId = group.Key,
                TemplateName = group.First().Template.Name,
                TotalDurationHours = Math.Round(group.Sum(session => session.Duration.TotalMinutes) / 60, 2),
                TemplateColor = group.First().Template.TemplateColor
            })
            .OrderByDescending(item => item.TotalDurationHours)
            .Reverse()
            .ToList();

            JsRuntime.InvokeAsync<object>("populateGraphs", templateDurations);
        }

        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            if (firstRender)
            {
                PassDataToJavaScript();
                hasRendered = true;
                StateHasChanged();
            }
        }
    }



    <script suppress-error="BL9992" src="js/index.js"</script>
    <script suppress-error="BL9992" src="https://d3js.org/d3.v5.min.js"></script>








